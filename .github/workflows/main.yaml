name: tests

on:
  push:
    branches:
      - master
      - develop
  pull_request:

jobs:
  tests:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.image }}
    strategy:
      matrix:
        os: [ubuntu]
        python-version: ["3.10.13", "3.11.6", "3.12.0"]
        include:
          - os: Ubuntu
            image: ubuntu-22.04
      fail-fast: false
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: pip install poetry==1.7.1

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Cache virtualenv
        uses: actions/cache@v3
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        run: poetry run pytest -v
